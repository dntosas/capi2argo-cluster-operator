# before:
  # hooks:
    # - go mod download
dist: bin
project_name: capi2argo-cluster-operator
env:
  - DOCKER_REPO="ghcr.io/dntosas"
builds:
  - env:
      - CGO_ENABLED=0
    binary: "{{ .ProjectName }}"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    flags:
      - -trimpath
      - -mod=vendor
    ldflags:
      - -s -w
      - -X {{ .ProjectName }}/cmd.Version={{ .Version }}
      - -X {{ .ProjectName }}/cmd.CommitHash={{ .FullCommit }}
    main: .

dockers:
  # amd64
  - image_templates:
      - ghcr.io/dntosas/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/dntosas/{{ .ProjectName }}:v{{ .Version }}-amd64
      - ghcr.io/dntosas/{{ .ProjectName }}:latest-amd64
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--platform=linux/amd64"
  # arm64
  - image_templates:
      - ghcr.io/dntosas/{{ .ProjectName }}:{{ .Version }}-arm64
      - ghcr.io/dntosas/{{ .ProjectName }}:v{{ .Version }}-arm64
      - ghcr.io/dntosas/{{ .ProjectName }}:latest-arm64
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--platform=linux/arm64/v8"

docker_manifests:
  # https://goreleaser.com/customization/docker_manifest/
  - name_template: ghcr.io/dntosas/{{ .ProjectName }}:{{ .Version }}
    image_templates:
      - ghcr.io/dntosas/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/dntosas/{{ .ProjectName }}:{{ .Version }}-arm64
  - name_template: ghcr.io/dntosas/{{ .ProjectName }}:v{{ .Version }}
    image_templates:
      - ghcr.io/dntosas/{{ .ProjectName }}:{{ .Version }}-amd64
      - ghcr.io/dntosas/{{ .ProjectName }}:{{ .Version }}-arm64
  - name_template: ghcr.io/dntosas/{{ .ProjectName }}:latest
    image_templates:
      - ghcr.io/dntosas/{{ .ProjectName }}:latest-amd64
      - ghcr.io/dntosas/{{ .ProjectName }}:latest-arm64

# TODO: Sign docker images
# docker_signs:
# - artifacts: all
#   stdin: "{{ .Env.COSIGN_PASSWORD }}"
#   args: ["sign", "--key=cosign.key", "${artifact}@${digest}", "--yes"]

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-SNAPSHOT"
changelog:
  sort: asc
  filters:
    exclude:
      - '^Merge\spull\srequest\s'
  groups:
    - title: 'New Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 100
    - title: 'Security updates'
      regexp: '^.*?sec(\([[:word:]]+\))??!?:.+$'
      order: 150
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 200
    - title: 'Documentation updates'
      regexp: ^.*?
    - title: Dependency updates
      regexp: '^.*?(feat|fix)\(deps\)!?:.+$'
      order: 300
# release:
#   draft: true